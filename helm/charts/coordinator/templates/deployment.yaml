apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  namespace: '{{ .Release.Namespace }}'
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Chart.Name }}
{{- if or (.Values.global.metrics.enabled) (.Values.metrics.enabled) }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8003"
{{- end }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1999
        fsGroup: 1999
      initContainers:
        - name: '{{ .Release.Name }}-{{ .Chart.Name }}-wait-for-db'
          image: postgres:latest
          command: ['sh', '-c', 'until pg_isready -h {{ .Release.Name }}-bbk-postgresql -p 5432 -U {{ .Chart.Name }};
            do echo waiting for database; sleep 2; done;']
      containers:
        - name: coordinator
          image: "{{ .Values.docker.registry | default .Values.global.docker.registry }}/bbkr/coordinator:{{ .Values.docker.imageTag }}"
          imagePullPolicy: {{ .Values.docker.imagePullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8003
          env:
            - name: NODE_ENV
              value: "production"
            - name: APP_NAME
              value: "Bit-Broker"
            - name: APP_MODE
              value: "standard"
            - name: COORDINATOR_NAME
              value: "Bit-Broker Coordinator Server"
            - name: COORDINATOR_BASE
              value: "http://{{ .Release.Name }}-{{ .Chart.Name }}:8003/v1"
            - name: DATABASE
              value: "postgresql://CREDENTIALS@{{ .Release.Name }}-bbk-postgresql/bit_broker"
            - name: METRICS_ENABLED
              value: "{{ .Values.metrics.enabled | default .Values.global.metrics.enabled }}"
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-{{ .Chart.Name }}-secret
