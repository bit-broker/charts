#######################################################################################
## Global Values

global:
  ## Database access
  ##
  passwords:
    admin: bbk_admin_pwd
    coordinator: bbk_coordinator_pwd
    contributor: bbk_contributor_pwd
    consumer: bbk_consumer_pwd

  ## Docker image
  ##
  docker:
    ## If private registry
    ##
    registry: "docker.io"

  ## Token's issuer
  ##
  issuer: "bit-broker.io"

  ## Admin settings
  ##
  admin:
    name: "Admin"
    email: "noreply@bit-broker.io"
    organization: "BitBroker"
    jti: "8facd32b-41b0-44e8-a97a-e8b5dc610d46"
    password: "bbkadmin"

  ## Portal settings
  ##
  portal:
    ## Mail Settings
    mail:
      send:
        host: "smtp.ethereal.email"
        port: "587"
      sender:
        name: "BitBroker Team"
      username: "juliet.koelpin84@ethereal.email"
      password: "7aPyGg9TCVCTCYbkKW"

    ## Host URL
    ## Should be specified if gateway host below is disabled
    ##
    # host: "https://bit-broker.io"

  ## Gateway settings
  ##
  gateway:
    ## Host URL
    ## If specified, an Ambassador Host will be created
    ##
    # host: "bit-broker.io"

    ## Specify this for Let's encrypt auto renewal
    ##
    acmeProvider: "admin@bit-broker.io"

    ## Specify the tls certificate
    ##
    # tlsSecret: "tls-cert"

    ## Enable cluster issuer for Let's encrypt
    ## This will enable resources to add Let's encrypt HTTP
    ## challenge and release the certificate
    ##
    certificateIssuer: false

  ## Redis global options
  ##
  redis:
    ## Redis image
    imageTag: "6.2.3-alpine"

    ## Whether or not persistence is enabled
    ##
    persistentVolume:
      enabled: false

      ## Redis data Persistent Volume mount root path
      ##
      mountPath: /data

      ## Redis data Persistent Volume size
      ##
      size: 10Gi

      ## Redis data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      # storageClass: "-"

  ## Enable or disable metrics for Prometheus
  ## Prometheus Service Monitors will be deployed for each subchart
  ##
  metrics:
    enabled: false

## End of Global Values
#######################################################################################

#######################################################################################
## Bit-Broker Coordinator Values

bbk-coordinator:
  enabled: true

  ## Coordinator instance count.
  replicaCount: 1

  ## Docker Image values.
  docker:
    imageTag: "1.0.0"
    imagePullPolicy: Always
    imagePullSecret: regcred

  ## Redis options
  ##
  redis:
    ## Policy Service comes with a basic instance of Redis
    ## Change values below to enable your own instance
    ownInstance:
      enabled: false
      # addr: "redis:6379"
      # password: ""
      # db: "0"

## End of Bit-Broker Coordinator Values
#######################################################################################

#######################################################################################
## Bit-Broker Contributor Values

bbk-contributor:
  enabled: true

  ## Contributor instance count.
  replicaCount: 1

  ## Docker Image values.
  docker:
    imageTag: "1.0.0"
    imagePullPolicy: Always
    imagePullSecret: regcred

## End of Bit-Broker Contributor Values
#######################################################################################

#######################################################################################
## Bit-Broker Consumer Values

bbk-consumer:
  enabled: true

  ## Consumer instance count.
  replicaCount: 1

  ## Docker Image values.
  docker:
    imageTag: "1.0.0"
    imagePullPolicy: Always
    imagePullSecret: regcred

## End of Bit-Broker Consumer Values
#######################################################################################
#
#######################################################################################
## Bit-Broker Portal Values

bbk-portal:
  enabled: false

  ## Contributor instance count.
  replicaCount: 1

  ## Docker Image values.
  docker:
    imageTag: "latest"
    imagePullPolicy: Always
    imagePullSecret: regcred

## End of Bit-Broker Portal Values
#######################################################################################


#######################################################################################
## Bit-Broker Postgres Values

bbk-postgresql:
  enabled: true

  ## Enable security context
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true

  ## ConfigMap with scripts to be run at first boot
  initdbScriptsConfigMap: bbk-postgres-init

# End of Bit-Broker Postgres Values
#######################################################################################

#######################################################################################
## Auth Service Values

bbk-auth-service:
  enabled: true

  docker:
    imageTag: "1.0.0"
    imagePullPolicy: Always
    imagePullSecret: regcred

  ## Number of replicas
  ##
  replicaCount: 1

  ## Debug tools
  ##
  logLevel: "info"

  ## JWT's duration for refreshable tokens
  ##
  jwt_duration: "2592000"

  ## JWKS
  ##
  JWKS: "JWKS"

  ## Redis options
  ##
  redis:
    ## Auth Service comes with a basic instance of Redis
    ## Change values below to enable your own instance
    ownInstance:
      enabled: false
      # addr: "redis:6379"
      # password: ""
      # db: "0"

## End of Auth Service Values
#######################################################################################

#######################################################################################
## Rate Service Values

bbk-rate-service:
  enabled: true

  ## Docker image
  ##
  docker:
    imageTag: "1.0.0"
    imagePullPolicy: "Always"
    imagePullSecret: "regcred"

  ## Number of replicas
  ##
  replicaCount: 1

  ## Debug tools
  ##
  logLevel: "InfoLevel"

  ## Redis options
  ##
  redis:
    ## Rate Service comes with a basic instance of Redis
    ## Change values below to enable your own instance
    ownInstance:
      enabled: false
      # addr: "redis:6379"
      # password: ""
      # db: "0"

## End of Rate Service Values
#######################################################################################

#######################################################################################
## Ambassador Values

bbk-emissary-ingress:
  ## Dependency enabler
  enabled: true
  ## Default values for ambassador.
  ## This is a YAML-formatted file.
  ## Declare variables to be passed into your templates.

  ## Enable autoscaling using HorizontalPodAutoscaler
  ## daemonSet: true, autoscaling will be disabled
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 60
      - type: Resource
        resource:
          name: memory
          target:
            type: Utilization
            averageUtilization: 60

  podDisruptionBudget: {}

  ## Additional container environment variable
  ## Uncomment or add additional environment variables for the container here.
  env:
    ## Exposing statistics via StatsD
    # STATSD_ENABLED: true
    # STATSD_HOST: statsd-sink
    # sets the minimum number of seconds between Envoy restarts
    # AMBASSADOR_RESTART_TIME: 15
    # sets the number of seconds that the Envoy will wait for open connections to drain on a restart
    # AMBASSADOR_DRAIN_TIME: 5
    # sets the number of seconds that Ambassador will wait for the old Envoy to clean up and exit on a restart
    # AMBASSADOR_SHUTDOWN_TIME: 10
  ## labels Ambassador with an ID to allow for configuring multiple Ambassadors in a cluster
    AMBASSADOR_ID: ambassador-bbk

  ## Disable AES for Bit-Broker
  enableAES: false

  image:
    # Emissary Ingress docker repo
    repository: docker.io/emissaryingress/emissary
    # Emissary Ingress docker tag
    tag: 2.2.2
    # Pod container image pull policy
    pullPolicy: IfNotPresent

  service:
    type: LoadBalancer

    ## Note that target http ports need to match your ambassador configurations service_port
    ## https://www.getambassador.io/reference/modules/#the-ambassador-module
    ports:
      - name: http
        port: 80
        targetPort: 8080
        # protocol: TCP
        # nodePort: 30080
        # hostPort: 80
      - name: https
        port: 443
        targetPort: 8443
        # protocol: TCP
        # nodePort: 30443
        # hostPort: 443
        # TCPMapping_Port
        # port: 2222
        # targetPort: 2222
        # protocol: TCP
        # nodePort: 30222

  podAnnotations:
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "9102"

  resources:
    ## Recommended resource requests and limits for Ambassador
    limits:
      cpu: 1000m
      memory: 600Mi
    requests:
      cpu: 200m
      memory: 300Mi

  ## Prometheus Operator ServiceMonitor configuration
  ## See documentation: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor
  metrics:
    serviceMonitor:
      enabled: false
      # interval: 30s
      # scrapeTimeout: 30s
      # selector: {}

## End of Ambassador Values
#######################################################################################

#######################################################################################
## Ory Oathkeeper Values

bbk-oathkeeper:
  ## Number of ORY Oathkeeper members
  enabled: true
  replicaCount: 1

  image:
    ## ORY Oathkeeper image
    repository: oryd/oathkeeper
    ## ORY Oathkeeper version
    tag: v0.38.18
    ## Image pull policy
    pullPolicy: IfNotPresent

  # -- Chart name override
  nameOverride: "bbk-oathkeeper"

  oathkeeper:
    # Disable managed access rules
    managedAccessRules: false

    # The ORY Oathkeeper configuration. For a full list of available settings, check:
    #   https://github.com/ory/oathkeeper/blob/master/docs/config.yaml
    config:
      # access_rules:

      serve:
        proxy:
          port: 4455
        api:
          port: 4456

      authenticators:
        jwt:
          enabled: true
          config:
            jwks_urls:
              - http://dummy  # Keep this here to avoid validation error
        noop:
          enabled: true
      mutators:
        header:
          enabled: true
          config:
            headers:
              dummy: dummy
        noop:
          enabled: true
      authorizers:
        remote:
          enabled: true
          config:
            remote: http://dummy
            forward_response_headers_to_upstream: []
        allow:
          enabled: true
  ##  If set, uses the given JSON Web Key Set as the signing key for the ID Token Mutator.
  ##  mutatorIdTokenJWKs: {}
  ##  If set, uses the given access rules.
  ## accessRules: {}

  deployment:
    resources: {}
    ##  We usually recommend not to specify default resources and to leave this as a conscious
    ## choice for the user. This also increases chances charts run on environments with little
    ##  resources, such as Minikube. If you do want to specify resources, uncomment the following
    ##  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #  limits:
    #    cpu: 100m
    #    memory: 128Mi
    #  requests:
    #    cpu: 100m
    #  memory: 128Mi
    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      privileged: false

    ## Node labels for pod assignment.
    nodeSelector: {}
    ## If you do want to specify node labels, uncomment the following
    ## lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    #   foo: bar

    extraEnv: []

    ## Configuration for tracing providers. Only datadog is currently supported through this block.
    ## If you need to use a different tracing provider, please manually set the configuration values
    ## via "oathkeeper.config" or via "deployment.extraEnv".
    tracing:
      datadog:
        enabled: false

        # Sets the datadog DD_ENV environment variable. This value indicates the environment where oathkeeper is running.
        # Default value: "none".
        # env: production

        # Sets the datadog DD_VERSION environment variable. This value indicates the version that oathkeeper is running.
        # Default value: .Values.image.tag (i.e. the tag used for the docker image).
        # version: X.Y.Z

        # Sets the datadog DD_SERVICE environment variable. This value indicates the name of the service running.
        # Default value: "ory/oathkeeper".
        # service: ory/oathkeeper

        # Sets the datadog DD_AGENT_HOST environment variable. This value indicates the host address of the datadog agent.
        # If set to true, this configuration will automatically set DD_AGENT_HOST to the field "status.hostIP" of the pod.
        # Default value: false.
        # useHostIP: true

    ## Configure node tolerations.
    tolerations: []

    labels: {}
    ##      If you do want to specify additional labels, uncomment the following
    ##     lines, adjust them as necessary, and remove the curly braces after 'labels:'.
    #      e.g.  type: app

    annotations: {}
    ##      If you do want to specify annotations, uncomment the following
    ##      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    #      e.g.  sidecar.istio.io/rewriteAppHTTPProbers: "true"


  #
  affinity: {}

  ## Configures controller setup
  maester:
    enabled: false

## End of Ory Oathkeeper Values
#######################################################################################
