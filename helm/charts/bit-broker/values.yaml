#######################################################################################
## Global Values

global:
  ## Allowed headers
  ##
  headers:
    ## Header containing the authentication token
    ##
    authToken: "x-bbk-auth-token"

    ## Header containing the policy id
    ##
    policy: "x-bbk-policy"

  ## Docker image
  ##
  docker:
    ## If private registry
    ##
    registry: "registry.hub.docker.com"

  ## Token's issuer
  ##
  issuer: "bit-broker.io"

  ## Gateway settings
  ##
  gateway:
    ## Host URL
    ##
    host: "bit-broker.io"

    ## Handle with Let's encrypt
    ##
    acmeProvider: "admin@bit-broker.io"

    ## Or specify a tls secret
    ##
    #tlsSecret: "tls-cert"

## End of Global Values
#######################################################################################

#######################################################################################
## Bit-Broker Coordinator Values

coordinator:
  enabled: true

  ## Coordinator instance count.
  replicaCount: 1

  ## Coordinator security context configuration.
  securityContext:
    runAsUser: 1392
    fsGroup: 1392

  ## Docker Image values.
  docker:
    imageTag: "latest"
    imagePullPolicy: Always
    imagePullSecret: regcred

  container:
    name: coordinator
    port: 8001

  ## Service configuration values.
  service:
    type: ClusterIP
    port: 8001

  ## Volume definitions.
  volume:
    mountPath: /home/node/app/services/coordinator/logs
    pvc:
      accessMode: ReadWriteOnce
      storage: 4Gi

## End of Bit-Broker Coordinator Values
#######################################################################################

#######################################################################################
## Bit-Broker Contributor Values

contributor:
  enabled: true

  ## Contributor instance count.
  replicaCount: 1

  ## Contributor security context configuration.
  securityContext:
    runAsUser: 1392
    fsGroup: 1392

  ## Docker Image values.
  docker:
    imageTag: "latest"
    imagePullPolicy: Always
    imagePullSecret: regcred

  container:
    name: coordinator
    port: 8002

  ## Service configuration values.
  service:
    type: ClusterIP
    port: 8002

  ## Volume definitions.
  volume:
    mountPath: /home/node/app/services/contributor/logs
    pvc:
      accessMode: ReadWriteOnce
      storage: 4Gi

## End of Bit-Broker Contributor Values
#######################################################################################

#######################################################################################
## Bit-Broker Consumer Values

consumer:
  enabled: true

  ## Consumer instance count.
  replicaCount: 1

  ## Consumer security context configuration.
  securityContext:
    runAsUser: 1392
    fsGroup: 1392

  ## Docker Image values.
  docker:
    imageTag: "latest"
    imagePullPolicy: Always
    imagePullSecret: regcred

  container:
    name: coordinator
    port: 8003

  ## Service configuration values.
  service:
    type: ClusterIP
    port: 8003

  ## Volume definitions.
  volume:
    mountPath: /home/node/app/services/consumer/logs
    pvc:
      accessMode: ReadWriteOnce
      storage: 4Gi

## End of Bit-Broker Consumer Values
#######################################################################################

#######################################################################################
## Bit-Broker Postgres Values

bit-broker-db:
  enabled: false

  replicaCount: 1
  postgres:
    name: bitbroker-db
    group: db
    docker:
      imageTag: "latest"
      imagePullPolicy: Always
      imagePullSecret: regcred
    container:
      name: bit-broker-db
      port: 5432
    service:
      type: ClusterIP
      port: 5432
    volume:
      name: postgres-storage
      kind: PersistentVolumeClaim
      mountPath: /var/lib/postgresql/data
      subPath: postgres
      pvc:
        accessMode: ReadWriteOnce
        storage: 4Gi

# End of Bit-Broker Postgres Values
#######################################################################################

#######################################################################################
## Auth Service Values

auth-service:
  enabled: true

  docker:
    imageTag: "1.0.0"
    imagePullPolicy: Always
    imagePullSecret: regcred

  ## Number of replicas
  ##
  replicaCount: 1

  ## Debug tools
  ##
  logLevel: "info"

  ## JWKS
  ##
  JWKS: "JWKS"
  ## Docker image
  ##

## End of Auth Service Values
#######################################################################################

#######################################################################################
## Rate Service Values

rate-service:
  enabled: true

  ## Docker image
  ##
  docker:
    imageTag: "1.0.0"
    imagePullPolicy: "Always"
    imagePullSecret: "regcred"

  ## Number of replicas
  ##
  replicaCount: 1

  ## Debug tools
  ##
  logLevel: "InfoLevel"

  persistentVolume:
    ## whether or not persistence is enabled
    ##
    enabled: false

    ## Redis data Persistent Volume mount root path
    ##
    mountPath: /data

    ## Redis data Persistent Volume size
    ##
    size: 10Gi

    ## Redis data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ## storageClass: "-"

## End of Rate Service Values
#######################################################################################

## Bbk Mockup Values

bbk-mockup-api:
  enabled: true

  ## Docker image
  ##
  docker:
    imageTag: "1.0.0"
    imagePullPolicy: "Always"
    imagePullSecret: "regcred"

  ## ConfigMap values
  node_env: 'development'
  log_level: 'debug'
  server_port: '8080'
  ui_url: 'https://ui.com'

## End of Bbk Mockup Values
#######################################################################################

#######################################################################################
## Ambassador Values

ambassador-bbk:
  ## Dependency enabler
  enabled: true
  ## Default values for ambassador.
  ## This is a YAML-formatted file.
  ## Declare variables to be passed into your templates.

  ## Manually set metadata for the Release.
  ##
  ## Defaults to .Chart.Name
  nameOverride: ""
  ## Defaults to .Release.Name-.Chart.Name unless .Release.Name contains "ambassador"
  fullnameOverride: ""
  ## Defaults to .Release.Namespace
  namespaceOverride: ""

  replicaCount: 3
  daemonSet: false

  ## This will enable the test-ready Pod (https://github.com/datawire/ambassador-chart/blob/master/templates/tests/test-ready.yaml).
  ## It will spawn a busybox container to call Ambassador's check_ready endpoint to validate it is working correctly.
  test:
    enabled: true
    image: busybox

  ## Enable autoscaling using HorizontalPodAutoscaler
  ## daemonSet: true, autoscaling will be disabled
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 60
      - type: Resource
        resource:
          name: memory
          target:
            type: Utilization
            averageUtilization: 60

  podDisruptionBudget: { }

  # namespace:
  # name: default

  ## Additional container environment variable
  ## Uncomment or add additional environment variables for the container here.
  env: { }
    ## Exposing statistics via StatsD
    # STATSD_ENABLED: true
    # STATSD_HOST: statsd-sink
    # sets the minimum number of seconds between Envoy restarts
    # AMBASSADOR_RESTART_TIME: 15
    # sets the number of seconds that the Envoy will wait for open connections to drain on a restart
    # AMBASSADOR_DRAIN_TIME: 5
    # sets the number of seconds that Ambassador will wait for the old Envoy to clean up and exit on a restart
    # AMBASSADOR_SHUTDOWN_TIME: 10
  ## labels Ambassador with an ID to allow for configuring multiple Ambassadors in a cluster
  # AMBASSADOR_ID: default

  # Additional container environment variable in raw YAML format
  # Uncomment or add additional environment variables for the container here.
  envRaw: { }
  # - name: REDIS_PASSWORD
  #   value: password
  #   valueFrom:
  #     secretKeyRef:
  #       name: redis-password
  #       key: password
  # - name: POD_IP
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: status.podIP

  imagePullSecrets: [ ]

  security:
    # Security Context for all containers in the pod.
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#podsecuritycontext-v1-core
    podSecurityContext:
      runAsUser: 8888
    # Security Context for the Ambassador container specifically
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#securitycontext-v1-core
    containerSecurityContext:
      allowPrivilegeEscalation: false
    # A basic PodSecurityPolicy to ensure Ambassador is running with appropriate security permissions
    # https://kubernetes.io/docs/concepts/policy/pod-security-policy/
    #
    # A set of reasonable defaults is outlined below. This is not created by default as it should only
    # be created by a one Release. If you want to use the PodSecurityPolicy in the chart, create it in
    # the "master" Release and then leave it unset in all others. Set the `rbac.podSecurityPolicies`
    # in all non-"master" Releases.
    podSecurityPolicy: { }
      # # Add AppArmor and Seccomp annotations
      # # https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
      # annotations:
      # spec:
      #   seLinux:
      #     rule: RunAsAny
      #   supplementalGroups:
      #     rule: 'MustRunAs'
      #     ranges:
      #       # Forbid adding the root group.
      #       - min: 1
      #         max: 65535
      #   fsGroup:
      #     rule: 'MustRunAs'
      #     ranges:
      #       # Forbid adding the root group.
      #       - min: 1
      #         max: 65535
      #   privileged: false
      #   allowPrivilegeEscalation: false
    #   runAsUser:
    #     rule: MustRunAsNonRoot

  ## Disable AES for Bit-Broker
  enableAES: false

  image:
    repository: docker.io/datawire/ambassador
    tag: 1.13.1
    pullPolicy: IfNotPresent

  dnsPolicy: "ClusterFirst"
  hostNetwork: false

  service:
    type: LoadBalancer

    ## Note that target http ports need to match your ambassador configurations service_port
    ## https://www.getambassador.io/reference/modules/#the-ambassador-module
    ports:
      - name: http
        port: 80
        targetPort: 8080
        # protocol: TCP
        # nodePort: 30080
        # hostPort: 80
      - name: https
        port: 443
        targetPort: 8443
        # protocol: TCP
        # nodePort: 30443
        # hostPort: 443
        # TCPMapping_Port
        # port: 2222
        # targetPort: 2222
        # protocol: TCP
        # nodePort: 30222

    externalTrafficPolicy:

    sessionAffinity:

    sessionAffinityConfig:

    externalIPs: [ ]

    annotations: { }

    ## Manually set the name of the generated Service
    nameOverride:

  adminService:
    create: true
    type: ClusterIP
    port: 8877
    snapshotPort: 8005
    # NodePort used if type is NodePort
    # nodePort: 38877
    annotations:
      { }

  rbac:
    # Specifies whether RBAC resources should be created
    create: true
    # List of Pod Security Policies to use on the container.
    # If security.podSecurityPolicy is set, it will be appended to the list
    podSecurityPolicies: [ ]
    # Name of the RBAC resources defaults to the name of the release.
    # Set nameOverride when installing Ambassador with cluster-wide scope in
    # different namespaces with the same release name to avoid conflicts.
    nameOverride:

  scope:
    # tells Ambassador to only use resources in the namespace or namespace set by namespace.name
    singleNamespace: false

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  deploymentStrategy:
    type: RollingUpdate

  restartPolicy:

  terminationGracePeriodSeconds:

  initContainers: [ ]

  sidecarContainers: [ ]

  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 3
    failureThreshold: 3

  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 3
    failureThreshold: 3


  volumes: [ ]

  volumeMounts: [ ]

  podLabels:
    { }

  podAnnotations:
    { }
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "9102"

  deploymentLabels:
    { }

  deploymentAnnotations:
    { }
  # configmap.reloader.stakater.com/auto: "true"

  resources:
    ## Recommended resource requests and limits for Ambassador
    limits:
      cpu: 1000m
      memory: 600Mi
    requests:
      cpu: 200m
      memory: 300Mi

  priorityClassName: ""

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  topologySpreadConstraints: [ ]

  ambassadorConfig: ""

  crds:
    enabled: true
    create: true
    keep: true

  ## Prometheus Operator ServiceMonitor configuration
  ## See documentation: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor
  metrics:
    serviceMonitor:
      enabled: false
      # interval: 30s
      # scrapeTimeout: 30s
      # selector: {}

## End of Ambassador Values
#######################################################################################

#######################################################################################
## Ory Oathkeeper Values

oathkeeper-bbk:
  ## Number of ORY Oathkeeper members
  enabled: true
  replicaCount: 1

  image:
    ## ORY Oathkeeper image
    repository: oryd/oathkeeper
    ## ORY Oathkeeper version
    tag: v0.38.5
    ## Image pull policy
    pullPolicy: IfNotPresent

  ## Options for the sidecar
  sidecar:
    image:
      repository: oryd/oathkeeper-maester
      tag: v0.1.0
    envs: { }

  ## Image pull secrets
  imagePullSecrets: [ ]
  ## Chart name override
  nameOverride: ""
  # Full chart name override
  fullnameOverride: "oathkeeper-bbk"

  ## If enabled, a demo deployment with exemplary access rules
  ## and JSON Web Key Secrets will be generated.
  demo: false

  ## Configures the Kubernetes service
  service:
    ## Configures the Kubernetes service for the proxy port.
    proxy:
      ## En-/disable the service
      enabled: true
      ## The service type
      type: ClusterIP
      ## The service port
      port: 4455
      ## If you do want to specify annotations, uncomment the following
      ## lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
      annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: { }
      ##      If you do want to specify additional labels, uncomment the following
      ##      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
      ##      e.g.  app: oathkeeper

    ## Configures the Kubernetes service for the api port.
    api:
      ## En-/disable the service
      enabled: true
      ## The service type
      type: ClusterIP
      ## The service port
      port: 4456
      ## If you do want to specify annotations, uncomment the following
      ## lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
      annotations: { }
      ## kubernetes.io/ingress.class: nginx
      ## kubernetes.io/tls-acme: "true"
      labels: { }
      ##      If you do want to specify additional labels, uncomment the following
      ##      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
      ##      e.g.  app: oathkeeper

  oathkeeper:
    # Disable managed access rules
    # Maester will handle this
    managedAccessRules: false

    # The ORY Oathkeeper configuration. For a full list of available settings, check:
    #   https://github.com/ory/oathkeeper/blob/master/docs/config.yaml
    config:
      access_rules:
        repositories:
      serve:
        proxy:
          port: 4455
        api:
          port: 4456

      authenticators:
        jwt:
          enabled: true
          config:
            jwks_urls:
              - http://bit-broker-auth-service:8080/api/v1/.well-known/jwks.json
            token_from:
              header: x-bbk-auth-token
      mutators:
        hydrator:
          enabled: true
          config:
            api:
              url: http://bit-broker:8080/api/v1/check
              retry:
                give_up_after: 2s
                max_delay: 100ms
            cache:
              ttl: 60s
        header:
          enabled: true
          config:
            headers:
              x-bbk-policy: "{{ print .Extra.policy }}"
      authorizers:
        allow:
          enabled: true

  ##  If set, uses the given JSON Web Key Set as the signing key for the ID Token Mutator.
  ##  mutatorIdTokenJWKs: {}
  ##  If set, uses the given access rules.
  ## accessRules: {}

  deployment:
    resources: { }
    ##  We usually recommend not to specify default resources and to leave this as a conscious
    ## choice for the user. This also increases chances charts run on environments with little
    ##  resources, such as Minikube. If you do want to specify resources, uncomment the following
    ##  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #  limits:
    #    cpu: 100m
    #    memory: 128Mi
    #  requests:
    #    cpu: 100m
    #  memory: 128Mi
    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      privileged: false

    ## Node labels for pod assignment.
    nodeSelector: { }
    ## If you do want to specify node labels, uncomment the following
    ## lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    #   foo: bar

    extraEnv: [ ]

    ## Configuration for tracing providers. Only datadog is currently supported through this block.
    ## If you need to use a different tracing provider, please manually set the configuration values
    ## via "oathkeeper.config" or via "deployment.extraEnv".
    tracing:
      datadog:
        enabled: false

        # Sets the datadog DD_ENV environment variable. This value indicates the environment where oathkeeper is running.
        # Default value: "none".
        # env: production

        # Sets the datadog DD_VERSION environment variable. This value indicates the version that oathkeeper is running.
        # Default value: .Values.image.tag (i.e. the tag used for the docker image).
        # version: X.Y.Z

        # Sets the datadog DD_SERVICE environment variable. This value indicates the name of the service running.
        # Default value: "ory/oathkeeper".
        # service: ory/oathkeeper

        # Sets the datadog DD_AGENT_HOST environment variable. This value indicates the host address of the datadog agent.
        # If set to true, this configuration will automatically set DD_AGENT_HOST to the field "status.hostIP" of the pod.
        # Default value: false.
        # useHostIP: true

    ## Configure node tolerations.
    tolerations: [ ]

    labels: { }
    ##      If you do want to specify additional labels, uncomment the following
    ##     lines, adjust them as necessary, and remove the curly braces after 'labels:'.
    #      e.g.  type: app

    annotations: { }
    ##      If you do want to specify annotations, uncomment the following
    ##      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    #      e.g.  sidecar.istio.io/rewriteAppHTTPProbers: "true"


  #
  affinity: { }

  ## Configures controller setup
  maester:
    enabled: true
    oathkeeperFullnameOverride: "oathkeeper-bbk"
  oathkeeper-maester:
    oathkeeperFullnameOverride: "oathkeeper-bbk"


## End of Ory Oathkeeper Values
#######################################################################################
