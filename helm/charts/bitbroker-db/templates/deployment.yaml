apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  namespace: '{{ .Release.Namespace }}'
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
        group: {{ .Values.postgres.group }}
    spec:
      volumes:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-vol
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.volume.pvc.name }}
      containers:
        - name: {{ .Values.postgres.name }}
          image: "{{ .Values.postgres.docker.registry | default .Values.global.docker.registry }}/bit-broker-db:{{ .Values.postgres.docker.imageTag }}"
          {{ if .Values.postgres.docker.imagePullSecrets }}
          imagePullSecrets:
            - name: {{ .Values.postgres.docker.imagePullSecrets }}
          {{ end }}
          ports:
            - containerPort: {{ .Values.postgres.container.port }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-{{ .Chart.Name }}-configmap
          volumeMounts:
            - name: {{ .Values.postgres.volume.name }}
              mountPath: {{ .Values.postgres.volume.mountPath }}
              subPath: {{ .Values.postgres.volume.subPath }}